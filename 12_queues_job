#include <iostream>
#include <queue>
#include <string>
using namespace std;

// Function to add a job to the queue
void addJob(queue<string>& jobQueue) {
    string job;
    cout << "Enter the job name to add to the queue: ";
    cin >> job;
    jobQueue.push(job);
    cout << "Job '" << job << "' added to the queue." << endl;
}

// Function to delete a job from the queue
void deleteJob(queue<string>& jobQueue) {
    if (jobQueue.empty()) {
        cout << "No jobs in the queue to delete." << endl;
    } else {
        cout << "Job '" << jobQueue.front() << "' deleted from the queue." << endl;
        jobQueue.pop();
    }
}

// Function to display the jobs in the queue
void displayJobs(const queue<string>& jobQueue) {
    if (jobQueue.empty()) {
        cout << "No jobs in the queue." << endl;
    } else {
        cout << "Jobs in the queue: ";
        queue<string> tempQueue = jobQueue; // Create a copy to display without altering the original queue
        while (!tempQueue.empty()) {
            cout << tempQueue.front() << " ";
            tempQueue.pop();
        }
        cout << endl;
    }
}

int main() {
    queue<string> jobQueue;  // Queue to store job names
    int choice;

    while (true) {
        cout << "\nJob Queue Simulation Menu" << endl;
        cout << "1. Add Job to Queue" << endl;
        cout << "2. Delete Job from Queue" << endl;
        cout << "3. Display Jobs in Queue" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                addJob(jobQueue);  // Add job to the queue
                break;
            case 2:
                deleteJob(jobQueue);  // Delete job from the queue
                break;
            case 3:
                displayJobs(jobQueue);  // Display jobs in the queue
                break;
            case 4:
                cout << "Exiting the program." << endl;
                return 0;  // Exit the program
            default:
                cout << "Invalid choice! Please try again." << endl;
        }
    }

    return 0;
}
